<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/Algorithm/BasicTwoPointerQuestions/TwoPointerQuestion.java;G:/Divyansh/java_practise/Algorithm/SlidingWindow.java;G:/Divyansh/java_practise/Algorithm/TwoPointerAlgorithm.java;G:/Divyansh/java_practise/basicarrayquestion/BasicArrayQuestions.java;G:/Divyansh/java_practise/collectionFramework/arrayListExample/ArrayListExample.java;G:/Divyansh/java_practise/collectionFramework/arrayListExample/ArrayListExampleObject.java;G:/Divyansh/java_practise/hashmap/AnagramChecker.java;G:/Divyansh/java_practise/hashmap/BasicHashMapQus.java;G:/Divyansh/java_practise/hashmap/FirstNonRepeatedCharFinder.java;G:/Divyansh/java_practise/hashmap/IsIsoMorphic.java;G:/Divyansh/java_practise/hashmap/LongestSubstringWithoutRepeatingCharacters.java;G:/Divyansh/java_practise/hashmap/ThreeSum.java;G:/Divyansh/java_practise/hashmap/TwoSum.java;G:/Divyansh/java_practise/oops/classbasics/Animal.java;G:/Divyansh/java_practise/oops/classbasics/BankAccount.java;G:/Divyansh/java_practise/oops/classbasics/Bike.java;G:/Divyansh/java_practise/oops/classbasics/Car.java;G:/Divyansh/java_practise/oops/classbasics/Cat.java;G:/Divyansh/java_practise/oops/classbasics/Circle.java;G:/Divyansh/java_practise/oops/classbasics/CreditCard.java;G:/Divyansh/java_practise/oops/classbasics/Dog.java;G:/Divyansh/java_practise/oops/classbasics/Employee.java;G:/Divyansh/java_practise/oops/classbasics/Engine.java;G:/Divyansh/java_practise/oops/classbasics/Features.java;G:/Divyansh/java_practise/oops/classbasics/Main.java;G:/Divyansh/java_practise/oops/classbasics/MathOperations.java;G:/Divyansh/java_practise/oops/classbasics/MusicSystem.java;G:/Divyansh/java_practise/oops/classbasics/Payment.java;G:/Divyansh/java_practise/oops/classbasics/PayPal.java;G:/Divyansh/java_practise/oops/classbasics/Person.java;G:/Divyansh/java_practise/oops/classbasics/Rectangle.java;G:/Divyansh/java_practise/oops/classbasics/Shape.java;G:/Divyansh/java_practise/oops/classbasics/Student.java;G:/Divyansh/java_practise/oops/classbasics/Vehical.java;G:/Divyansh/java_practise/oops/classbasics/Vehicle.java;G:/Divyansh/java_practise/oops/Inheritance/singleInheritance/Animal.java;G:/Divyansh/java_practise/oops/Person.java;G:/Divyansh/java_practise/oops/Student.java;G:/Divyansh/java_practise/pattern/StarPattern.java;G:/Divyansh/java_practise/Recursion/basicRecursionQue/BasicRecursionQus.java;G:/Divyansh/java_practise/Recursion/ArmstrongNumber.java;G:/Divyansh/java_practise/Recursion/ArrayReverse.java;G:/Divyansh/java_practise/Recursion/ArraySum.java;G:/Divyansh/java_practise/Recursion/FibonacciNumber.java;G:/Divyansh/java_practise/Recursion/MaxMinElement.java;G:/Divyansh/java_practise/Recursion/MinMaxElementRecursive.java;G:/Divyansh/java_practise/Recursion/PalindromeCheck.java;G:/Divyansh/java_practise/Recursion/ReverseWords.java;G:/Divyansh/java_practise/Recursion/RotateArray.java;G:/Divyansh/java_practise/Recursion/StringReversal.java;G:/Divyansh/java_practise/sorting/bubble/BubbleSort.java;G:/Divyansh/java_practise/sorting/insertion/InsertionSort.java;G:/Divyansh/java_practise/sorting/merge/MergeSort.java;G:/Divyansh/java_practise/sorting/selection/SelectionSort.java;G:/Divyansh/java_practise/sorting/MergeSort.java;G:/Divyansh/java_practise/StringsLeetcode/ArrayStringEqualityChecker.java;G:/Divyansh/java_practise/StringsLeetcode/RemovePalindromeSub.java;G:/Divyansh/java_practise/StringsLeetcode/ReverseString.java;G:/Divyansh/java_practise/StringsLeetcode/ReverseStringUsingStringBuilder.java;G:/Divyansh/java_practise/StringsLeetcode/ThreeSum.java;G:/Divyansh/java_practise/withoutrecursion/checkPalindomeNumber.java;G:/Divyansh/java_practise/withoutrecursion/checkPalindrome.java;G:/Divyansh/java_practise/withoutrecursion/CheckVowel.java;G:/Divyansh/java_practise/withoutrecursion/DeadlockDemo.java;G:/Divyansh/java_practise/withoutrecursion/findHighest.java;G:/Divyansh/java_practise/withoutrecursion/findSecondHighest.java;G:/Divyansh/java_practise/withoutrecursion/ReverseNumber.java;G:/Divyansh/java_practise/withoutrecursion/RotateArray.java;G:/Divyansh/java_practise/withoutrecursion/ValidParentheses.java;G:/Divyansh/java_practise/REPORT.java" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;G:/Divyansh/java_practise&quot;:&quot;{\&quot;/Recursion/MaxMinElement.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`getMax`: This function takes an array and its size as input, and returns the maximum element in the array.\\n\\n`getMin`: This function takes an array and its size as input, and returns the minimum element in the array.\\n\\n`main`: This is the main function that creates an array, calls the `getMin` and `getMax` functions to find the minimum and maximum elements in the array, and prints the results.\\n\\nOverall, this file demonstrates how to find the minimum and maximum elements in an array using a simple iterative approach.\&quot;,\&quot;/oops/classbasics/Cat.java\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`Cat`: A class that implements the `Animal` interface and provides an implementation for the `makeSound()` method.\\n\\n`makeSound()`: A method that prints \\\&quot;Cat meows!\\\&quot; when called.\\n\\n`main()`: The entry point of the program, which creates instances of `Dog` and `Cat` objects, and calls their respective `makeSound()` methods.\\n\\nThe file demonstrates the use of interfaces and polymorphism in Java by creating instances of different `Animal` implementations and calling their `makeSound()` methods.\&quot;,\&quot;/sorting/MergeSort.java\&quot;:\&quot;This file contains a single class `MergeSort` that implements the Merge Sort algorithm to sort an array of integers.\\n\\n`MergeSort`: A class that implements the Merge Sort algorithm to sort an array of integers.\\n\\n`mergeSort`: A function that recursively divides the input array into two halves, sorts them, and then merges the sorted halves.\\n\\n`merge`: A function that merges two sorted subarrays of the input array into a single sorted subarray.\\n\\n`main`: The main function that creates an unsorted array, calls the `mergeSort` function to sort it, and then prints the sorted array.\&quot;,\&quot;/oops/classbasics/Shape.java\&quot;:\&quot;This file defines an abstract class `Shape` with the following:\\n\\n`Shape`: An abstract class that represents a shape with a length and width.\\n\\n`area()`: An abstract method that calculates the area of the shape.\&quot;,\&quot;/oops/classbasics/MusicSystem.java\&quot;:\&quot;This file defines an interface named `MusicSystem` that contains a single method `playMusic()`.\\n\\n`MusicSystem`: An interface that defines the contract for a music system, specifying that any class implementing this interface must provide an implementation for the `playMusic()` method.\\n\\n`playMusic()`: A method declaration that specifies that any class implementing the `MusicSystem` interface must provide an implementation to play music.\&quot;,\&quot;/withoutrecursion/RotateArray.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that creates an array, rotates it by a given number of positions, and prints the rotated array.\\n\\n`rotateArray`: The function that rotates the given array by the specified number of positions.\\n\\nThe file implements a simple algorithm to rotate an array without using recursion. It does this by iteratively moving the first element to the end of the array for the specified number of rotations.\&quot;,\&quot;/hashmap/LongestSubstringWithoutRepeatingCharacters.java\&quot;:\&quot;This file contains a single class `LongestSubstringWithoutRepeatingCharacters` and a single function `longestSubstringWithoutRepeatingCharacters()`.\\n\\n`LongestSubstringWithoutRepeatingCharacters`: This class provides a solution to the problem of finding the length of the longest substring within a given string that does not contain any repeating characters.\\n\\n`longestSubstringWithoutRepeatingCharacters()`: This function takes a string as input and returns the length of the longest substring within the string that does not contain any repeating characters.\&quot;,\&quot;/Recursion/MinMaxElementRecursive.java\&quot;:\&quot;This file contains a single class `MinMaxElementRecursive` and two functions `findMin` and `findMax`.\\n\\n`MinMaxElementRecursive`: This class demonstrates the use of recursive functions to find the minimum and maximum elements in an array.\\n\\n`findMin`: This function recursively finds the minimum element in the given array by dividing the array into two halves and comparing the minimum elements of the left and right halves.\\n\\n`findMax`: This function recursively finds the maximum element in the given array by dividing the array into two halves and comparing the maximum elements of the left and right halves.\&quot;,\&quot;/pattern/StarPattern.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`print1()`: Prints a square pattern of asterisks.\\n`print2()`: Prints a triangle pattern of numbers.\\n`print3()`: Prints a reverse triangle pattern of numbers.\\n`print4()`: Prints a pyramid pattern of asterisks.\\n`print5()`: Prints a reverse pyramid pattern of asterisks.\\n`print6()`: Prints a combined pyramid and reverse pyramid pattern of asterisks.\\n`print7()`: Prints a combined triangle and reverse triangle pattern of asterisks.\\n`print8()`: Prints a pattern of alternating 0s and 1s.\\n`print9()`: Prints a symmetrical number pattern.\\n`print10()`: Prints a pattern of increasing numbers.\\n`print11()`: Prints a pattern of uppercase letters.\\n`print12()`: Prints a reverse pattern of uppercase letters.\\n`print13()`: Prints a pattern of repeating uppercase letters.\\n`print14()`: Prints a pattern of spaces and characters.\\n\\nThe main purpose of this file is to demonstrate various star and number patterns that can be printed using nested loops in Java.\&quot;,\&quot;/withoutrecursion/findSecondHighest.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`secondHighest`: This function takes an array of integers as input and returns the second highest number in the array. If there is no second highest number, it throws a `RuntimeException`.\\n\\n`main`: This function creates an array of integers and calls the `secondHighest` function to print the second highest number in the array.\\n\\nThe file is a Java program that demonstrates how to find the second highest number in an array without using recursion.\&quot;,\&quot;/oops/Person.java\&quot;:\&quot;`Person`: A class that represents a person with a name and age.\\n\\n`main`: The main function that creates a `Person` object and prints its name.\\n\\nThis file defines a `Person` class with a constructor that takes a name and age as parameters. The `main` function creates a `Person` object with the name \\\&quot;Mohit\\\&quot; and age 26, and then prints the name of the `Person` object.\&quot;,\&quot;/withoutrecursion/findHighest.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`findHighest`: This function takes an integer array as input and returns the highest value in the array.\\n\\n`main`: This function creates an integer array and calls the `findHighest` function to print the highest value in the array.\\n\\nThe purpose of this file is to demonstrate a simple algorithm to find the highest value in an integer array without using recursion.\&quot;,\&quot;/Recursion/ArraySum.java\&quot;:\&quot;This file contains a single class `ArraySum` and a single function `findSum()`.\\n\\n`ArraySum`: This class contains a recursive function to calculate the sum of all elements in an array.\\n\\n`findSum()`: This function recursively calculates the sum of all elements in the given array by adding the last element and calling the function with the array size decremented by 1.\&quot;,\&quot;/oops/classbasics/BankAccount.java\&quot;:\&quot;`BankAccount`: A class that represents a bank account with an account holder and a balance.\\n\\n`getBalance()`: Returns the current balance of the bank account.\\n\\n`deposit(double amount)`: Adds the specified amount to the balance if the amount is positive.\\n\\n`withdraw(double amount)`: Subtracts the specified amount from the balance if the amount is positive and does not exceed the current balance.\\n\\n`main(String[] args)`: Creates a `BankAccount` object, performs deposit and withdrawal operations, and prints the current balance.\&quot;,\&quot;/Recursion/ArmstrongNumber.java\&quot;:\&quot;This file contains a single class `ArmstrongNumber` and two functions `isArmstrong()` and `main()`.\\n\\n`ArmstrongNumber`: This class contains methods to check if a given number is an Armstrong number.\\n\\n`isArmstrong()`: This function takes an integer `number` as input and returns `true` if the number is an Armstrong number, and `false` otherwise.\\n\\n`main()`: This function is the entry point of the program, where it calls the `isArmstrong()` function to check if the number `153` is an Armstrong number and prints the result.\&quot;,\&quot;/hashmap/IsIsoMorphic.java\&quot;:\&quot;This file contains the implementation of the `IsIsoMorphic` class, which provides a method to check if two strings are isomorphic.\\n\\n`IsIsoMorphic`: A class that checks if two strings are isomorphic, meaning they have the same structure and can be transformed into each other by replacing characters.\\n\\n`isIsomorphic`: A method that takes two strings as input and returns `true` if they are isomorphic, and `false` otherwise.\\n\\n`main`: The main method that creates an instance of the `IsIsoMorphic` class and calls the `isIsomorphic` method with sample input.\&quot;,\&quot;/oops/Student.java\&quot;:\&quot;`Student`: A class that extends the `Person` class and represents a student with properties such as name, age, roll number, and school.\\n\\n`Person`: A class that serves as a base class for the `Student` class, providing common properties and methods.\\n\\n`displayCountry()`: A method that prints the country name, which is a final variable.\\n\\n`show()`: A method that prints \\\&quot;Hello from show method\\\&quot;.\\n\\n`show(int times)`: A method that prints \\\&quot;Hello from show method\\\&quot; a specified number of times.\\n\\n`display()`: A method that calls the `show()` method and then prints \\\&quot;Hello from display method\\\&quot;.\\n\\n`showInfo()`: A method that prints the student\\u0027s name, age, and school name.\\n\\n`main()`: The main method that creates instances of the `Student` class, demonstrates the usage of various methods, and prints the student\\u0027s details.\&quot;,\&quot;/oops/classbasics/Vehicle.java\&quot;:\&quot;This file defines an interface named `Vehicle` that declares two methods: `start()` and `stop()`.\\n\\n`Vehicle`: An interface that defines the basic operations for a vehicle, such as starting and stopping.\\n\\n`start()`: A method that represents the action of starting a vehicle.\\n\\n`stop()`: A method that represents the action of stopping a vehicle.\&quot;,\&quot;/oops/classbasics/Employee.java\&quot;:\&quot;`Employee`: A class that extends the `Person` class and represents an employee with a name, age, and salary.\\n\\n`Person`: A class that represents a person with a name and age.\\n\\n`displayEmployeeInfo()`: A method that displays the employee\\u0027s personal information and salary.\\n\\n`greet()`: An overridden method from the `Person` class that prints a greeting message with the employee\\u0027s name.\\n\\n`main()`: The main entry point of the program, where an `Employee` object is created and its methods are called.\&quot;,\&quot;/oops/classbasics/PayPal.java\&quot;:\&quot;`PayPal`: A class that extends the `Payment` class and overrides the `processPayment()` method to handle payment processing with PayPal.\\n\\n`processPayment()`: A method that prints a message indicating that the payment is being processed with PayPal.\&quot;,\&quot;/oops/classbasics/Main.java\&quot;:\&quot;This file contains the following:\\n\\n`Main`: The main class that serves as the entry point of the program.\\n\\n`processPayment()`: The function that processes the payment for the respective payment method (CreditCard or PayPal).\\n\\nThis file demonstrates the concept of polymorphism in object-oriented programming (OOP) by creating instances of the `Payment` interface and calling the `processPayment()` method on them, which will execute the implementation specific to the underlying payment method (CreditCard or PayPal).\&quot;,\&quot;/hashmap/AnagramChecker.java\&quot;:\&quot;This file contains the implementation of an Anagram Checker using Java.\\n\\n`AnagramChecker`: This class provides a method to check if two given strings are anagrams.\\n\\n`areAnagrams`: This function takes two strings as input and checks if they are anagrams by comparing the frequency of characters in both strings.\\n\\n`main`: This is the entry point of the program, where two sample strings are checked for anagrams and the result is printed to the console.\&quot;,\&quot;/basicarrayquestion/BasicArrayQuestions.java\&quot;:\&quot;This file contains a single class `BasicArrayQuestions` that provides various functions to perform common array operations.\\n\\n`BasicArrayQuestions`: A class that contains methods to perform various array operations such as sorting, finding the sum and average, finding the largest and second-largest elements, checking if an array is sorted, checking if an array contains a specific value, removing a specific element, inserting an element at a specific position, finding the index of an element, finding the maximum and minimum values, reversing an array, and removing duplicate elements.\\n\\n`sortedArray`: Sorts the given array using the selection sort algorithm.\\n`sumOfArray`: Calculates the sum of all elements in the given array.\\n`avgOfArray`: Calculates the average of all elements in the given array.\\n`largestElementArray`: Finds the largest element in the given array.\\n`secondLrgestElementArray`: Finds the second-largest element in the given array.\\n`ifArraySort`: Checks if the given array is sorted in ascending order.\\n`containSpecificValue`: Checks if the given array contains a specific value.\\n`removeSpecificElement`: Removes a specific element from the given array.\\n`removeSpecificElementUsingArrayList`: Removes a specific element from the given array using an ArrayList.\\n`insertElementSpecificPosition`: Inserts an element at a specific position in the given array.\\n`insertElementSpecificPositionUsingArrayList`: Inserts an element at a specific position in the given array using an ArrayList.\\n`copyOfArray`: Creates a copy of the given array.\\n`findIndexOfArrayElement`: Finds the index of a specific element in the given array.\\n`maxAndminValueOfArray`: Finds the maximum and minimum values in the given array.\\n`reverseArray`: Reverses the order of elements in the given array.\\n`duplicateValueOfArray`: Finds the duplicate value in the given array.\\n`duplicateValueUsingHashMap`: Finds the duplicate values in the given array using a HashMap.\\n`leftRotateArray`: Performs a left rotation on the given array.\\n`removeDuplicateElementOfArray`: Removes the duplicate elements from the given array.\&quot;,\&quot;/collectionFramework/arrayListExample/ArrayListExampleObject.java\&quot;:\&quot;This file contains an example of using an ArrayList in Java to store objects of different types, including a custom `Person` class.\\n\\n`ArrayListExampleObject`: This class demonstrates the usage of an ArrayList to store and manipulate objects of different types, including a custom `Person` class.\\n\\n`main(String[] args)`: This function creates an ArrayList, adds various objects to it, iterates through the list, and then clears the list.\\n\\n`Person`: This class represents a person with a name and age, and provides methods to access and display the person\\u0027s information.\\n\\n`getName()`: This method returns the name of the person.\\n\\n`getAge()`: This method returns the age of the person.\\n\\n`toString()`: This method provides a string representation of the person\\u0027s name and age.\&quot;,\&quot;/oops/classbasics/Dog.java\&quot;:\&quot;This file defines a `Dog` class that implements the `Animal` interface.\\n\\n`Dog`: A class that represents a dog and implements the `Animal` interface.\\n\\n`makeSound()`: A method that prints \\\&quot;Dog barks!\\\&quot; when called.\&quot;,\&quot;/Algorithm/SlidingWindow.java\&quot;:\&quot;This file contains a single class named `SlidingWindow` and does not have any functions defined within it. The file appears to be a placeholder for an implementation of the Sliding Window algorithm, which is a technique used to solve problems that involve finding a subarray or substring that satisfies a certain condition.\\n\\n`SlidingWindow`: This class is a placeholder for an implementation of the Sliding Window algorithm.\&quot;,\&quot;/withoutrecursion/ValidParentheses.java\&quot;:\&quot;This file contains a single class `ValidParentheses` that provides a method `isValid` to check if a given string of parentheses, braces, and brackets is valid.\\n\\n`ValidParentheses`: A class that checks the validity of a string of parentheses, braces, and brackets.\\n\\n`isValid`: A function that takes a string of parentheses, braces, and brackets and returns `true` if the string is valid, and `false` otherwise.\&quot;,\&quot;/StringsLeetcode/ArrayStringEqualityChecker.java\&quot;:\&quot;`ArrayStringEqualityChecker`: A class that checks if two arrays of strings are equal when concatenated.\\n\\n`areEqual`: A function that takes two arrays of strings, concatenates them, and checks if the resulting strings are equal.\\n\\n`main`: The main function that creates two arrays of strings, checks if they are equal using the `areEqual` function, and prints the result.\&quot;,\&quot;/collectionFramework/arrayListExample/ArrayListExample.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it demonstrates the usage of the `ArrayList` class from the Java Collections Framework. The main functionality of this code is as follows:\\n\\n1. It creates an `ArrayList` of `String` objects and adds several names to it.\\n2. It demonstrates various operations on the `ArrayList`, such as accessing elements, modifying elements, iterating through the list, checking if an element exists, removing an element, and sorting the list.\\n3. The output of the program displays the results of these operations, showcasing the behavior of the `ArrayList` class.\&quot;,\&quot;/hashmap/FirstNonRepeatedCharFinder.java\&quot;:\&quot;This file contains a single class `FirstNonRepeatedCharFinder` and two functions:\\n\\n`FirstNonRepeatedCharFinder`: A class that provides a method to find the first non-repeated character in a given string.\\n\\n`firstNonRepeatedChar`: A function that takes a string as input and returns the first non-repeated character in the string, or `\\u0027\\\\0\\u0027` if no such character is found.\\n\\n`main`: The main function that demonstrates the usage of the `firstNonRepeatedChar` function by finding the first non-repeated character in the string \\\&quot;Divyansh Raj!\\\&quot;.\&quot;,\&quot;/sorting/insertion/InsertionSort.java\&quot;:\&quot;This file contains the implementation of the Insertion Sort algorithm in Java.\\n\\n`InsertionSort`: This class contains the implementation of the Insertion Sort algorithm.\\n\\n`insertionSort`: This function takes an integer array as input and sorts it in ascending order using the Insertion Sort algorithm.\\n\\n`main`: This function creates an unsorted integer array, calls the `insertionSort` function to sort the array, and then prints the sorted array.\&quot;,\&quot;/oops/classbasics/Animal.java\&quot;:\&quot;This file defines an `Animal` interface, which provides a contract for classes that represent animals.\\n\\n`Animal`: This interface defines the contract for classes that represent animals, specifying that they must have a `makeSound()` method.\\n\\n`makeSound()`: This method is declared in the `Animal` interface and is intended to be implemented by classes that implement the `Animal` interface, providing a way for animals to make their characteristic sounds.\&quot;,\&quot;/oops/classbasics/Engine.java\&quot;:\&quot;This file defines an `Engine` interface, which provides a contract for classes that represent an engine. The interface has a single method, `startEngine()`, which is used to start the engine.\\n\\n`Engine`: An interface that defines the contract for classes that represent an engine.\\n\\n`startEngine()`: A method that is used to start the engine.\&quot;,\&quot;/sorting/selection/SelectionSort.java\&quot;:\&quot;This file contains a single class `SelectionSort` and three functions:\\n\\n`SelectionSort`: This class implements the selection sort algorithm to sort an array of integers.\\n\\n`selectionSort`: This function takes an array of integers as input and sorts the array in ascending order using the selection sort algorithm.\\n\\n`printArray`: This function takes an array of integers as input and prints the elements of the array.\\n\\n`main`: This function is the entry point of the program. It creates an unsorted array of integers, prints the array, calls the `selectionSort` function to sort the array, and then prints the sorted array.\&quot;,\&quot;/Algorithm/BasicTwoPointerQuestions/TwoPointerQuestion.java\&quot;:\&quot;This file contains a single class `TwoPointerQuestion` with several static functions that solve various two-pointer problems.\\n\\n`TwoPointerQuestion`: A class that provides solutions to common two-pointer problems.\\n\\n`pairWithGivenSum`: Finds a pair of elements in a sorted array that sum up to a given target value.\\n\\n`moveAllZerosToEnd`: Moves all the zeros in an array to the end, preserving the order of the non-zero elements.\\n\\n`removeDuplicateSortedArray`: Removes duplicates from a sorted array and returns the modified array.\\n\\n`reverseArray`: Reverses the order of elements in an array.\\n\\nThe main method in this file demonstrates the usage of these functions with sample input and output.\&quot;,\&quot;/Algorithm/TwoPointerAlgorithm.java\&quot;:\&quot;This file contains a single class `TwoPointerAlgorithm` and two functions:\\n\\n`TwoPointerAlgorithm`: A class that demonstrates the use of the Two Pointer Algorithm to find two numbers in an array that add up to a target sum.\\n\\n`findNumbersWithSum`: A function that takes an array of integers and a target sum, and returns the two numbers from the array that add up to the target sum, if they exist.\\n\\n`main`: The main function that creates an array of integers, a target sum, and calls the `findNumbersWithSum` function to find the two numbers that add up to the target sum.\&quot;,\&quot;/Recursion/RotateArray.java\&quot;:\&quot;This file contains a single class `RotateArray` and two functions `rotateArray` and `rotateHelper`.\\n\\n`RotateArray`: This class demonstrates a recursive approach to rotating the elements of an array by a given number of positions.\\n\\n`rotateArray`: This function recursively rotates the array by calling the `rotateHelper` function until the desired number of rotations is achieved.\\n\\n`rotateHelper`: This function rotates the array by one position, moving the first element to the end of the array.\&quot;,\&quot;/sorting/merge/MergeSort.java\&quot;:\&quot;This file contains a single class `MergeSort` that implements the merge sort algorithm to sort an array of integers.\\n\\n`MergeSort`: A class that implements the merge sort algorithm to sort an array of integers.\\n\\n`mergeSort`: A function that recursively divides the input array into smaller subarrays, sorts them, and then merges them back together to produce the final sorted array.\\n\\n`merge`: A function that merges two sorted subarrays into a single sorted subarray.\\n\\n`main`: The main function that creates an unsorted array, calls the `mergeSort` function to sort it, and then prints the sorted array.\&quot;,\&quot;/withoutrecursion/CheckVowel.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it has a single `main()` method that checks if a given string contains any vowels and prints the result.\\n\\nThe file does the following:\\n1. Converts the input string to lowercase.\\n2. Iterates through the characters in the string and checks if any of them are vowels.\\n3. If a vowel is found, it sets a flag `vowelPresent` to `true` and breaks out of the loop.\\n4. Finally, it prints a message indicating whether a vowel was found in the string or not.\&quot;,\&quot;/oops/classbasics/Rectangle.java\&quot;:\&quot;`Rectangle`: A class that represents a rectangle and calculates its area.\\n\\n`area()`: A method that calculates and prints the area of the rectangle.\\n\\n`main()`: The main entry point of the program, which creates a `Rectangle` object and calls the `area()` method.\&quot;,\&quot;/StringsLeetcode/RemovePalindromeSub.java\&quot;:\&quot;This file contains a single class `RemovePalindromeSub` and two functions `removePalindromeSub` and `isPalindrome`.\\n\\n`RemovePalindromeSub`: This class contains a solution to the problem of removing palindromic substrings from a given string.\\n\\n`removePalindromeSub`: This function takes a string as input and returns the minimum number of steps required to remove all palindromic substrings from the string.\\n\\n`isPalindrome`: This function checks if a given string is a palindrome or not.\&quot;,\&quot;/oops/classbasics/Features.java\&quot;:\&quot;This file defines an interface named `Features` that declares two abstract methods:\\n\\n`Features`: An interface that defines the common features of a vehicle, such as changing gears and the number of seats.\\n\\n`changeGear(int gear)`: A method that allows the gear of a vehicle to be changed.\\n\\n`numberOfSeats(int seat)`: A method that allows the number of seats in a vehicle to be specified.\&quot;,\&quot;/hashmap/BasicHashMapQus.java\&quot;:\&quot;This file contains a `BasicHashMapQus` class with the following functions:\\n\\n`findFirstNonRepeating`: Finds the first non-repeating element in the given array.\\n\\n`lastNonRepeating`: Finds the last non-repeating element in the given array.\\n\\n`countFreq`: Finds the element with the highest and lowest frequency in the given array.\\n\\n`isSubset`: Checks if one array is a subset of another array.\\n\\n`duplicateValueUsingHashMap`: Finds the duplicate elements in the given array and their counts.\\n\\nThe file demonstrates the usage of HashMap data structure to solve various problems related to finding non-repeating, duplicate, and frequency of elements in an array.\&quot;,\&quot;/REPORT.java\&quot;:\&quot;This file contains a single class:\\n\\n`REPORT`: This class represents a report, but there are no additional details provided about its purpose or functionality.\\n\\nThere are no functions defined in this file.\&quot;,\&quot;/oops/classbasics/Circle.java\&quot;:\&quot;`Circle`: A class that represents a circle and calculates its area.\\n\\n`Shape`: A superclass that provides the basic properties and methods for a shape.\\n\\n`area()`: A method that calculates and prints the area of the circle.\\n\\n`main()`: The entry point of the program, which creates a `Circle` object and calls the `area()` method.\&quot;,\&quot;/oops/classbasics/CreditCard.java\&quot;:\&quot;`CreditCard`: A class that extends the `Payment` class and overrides the `processPayment()` method to handle credit card payment processing.\\n\\n`processPayment()`: A method that prints a message indicating that the payment is being processed using a credit card.\&quot;,\&quot;/Recursion/FibonacciNumber.java\&quot;:\&quot;This file contains a single class and a single function:\\n\\n`FibonacciNumber`: This class demonstrates the implementation of the Fibonacci sequence using recursion.\\n\\n`fib`: This function calculates the nth Fibonacci number by recursively calling itself with the previous two Fibonacci numbers.\&quot;,\&quot;/oops/classbasics/Bike.java\&quot;:\&quot;`Bike`: A class that represents a Bike, which is a type of Vehical.\\n\\n`Vehical`: A class that represents a Vehical, which is the parent class of Bike.\\n\\n`startEngine()`: A method that prints \\\&quot;Engine Start with 200mph\\\&quot; when called.\\n\\n`main()`: The main method that creates a new Bike object and calls the `startEngine()` method.\&quot;,\&quot;/oops/classbasics/MathOperations.java\&quot;:\&quot;This file contains a single class `MathOperations` with three overloaded `add()` functions.\\n\\n`MathOperations`: A class that provides various methods to perform addition operations on integers and doubles.\\n\\n`add(int a, int b)`: A method that takes two integers and returns their product.\\n`add(int a, int b, int c)`: A method that takes three integers and returns their sum.\\n`add(double a, double b)`: A method that takes two doubles and returns their sum.\\n`main(String[] args)`: The main method that creates an instance of the `MathOperations` class and calls the overloaded `add()` methods to perform various addition operations.\&quot;,\&quot;/hashmap/TwoSum.java\&quot;:\&quot;`TwoSum`: A class that provides a solution to the \\\&quot;Two Sum\\\&quot; problem, which is to find the indices of two numbers in an array that add up to a given target.\\n\\n`findTwoSum`: A function that takes an array of integers and a target integer, and returns the indices of the two numbers in the array that add up to the target.\\n\\nThis file contains a solution to the \\\&quot;Two Sum\\\&quot; problem, which is a common coding interview question. The solution uses a HashMap to efficiently find the two numbers that add up to the target.\&quot;,\&quot;/Recursion/ReverseWords.java\&quot;:\&quot;This file contains a single class `ReverseWords` and a single function `reverse()`.\\n\\n`ReverseWords`: This class demonstrates the use of recursion to reverse the characters in a given string.\\n\\n`reverse()`: This function takes a string as input and recursively reverses the characters in the string by appending the first character to the end of the string.\&quot;,\&quot;/Recursion/PalindromeCheck.java\&quot;:\&quot;This file contains a single class `PalindromeCheck` and two functions `isPalindrome` and `main`.\\n\\n`PalindromeCheck`: This class checks whether a given string is a palindrome or not using a recursive approach.\\n\\n`isPalindrome`: This function takes a string and two indices (start and end) as input and recursively checks if the string is a palindrome.\\n\\n`main`: This function is the entry point of the program, where it takes a number, converts it to a string, and checks if the string is a palindrome using the `isPalindrome` function.\&quot;,\&quot;/oops/classbasics/Vehical.java\&quot;:\&quot;This file defines an abstract class `Vehical` with the following classes and functions:\\n\\n`Vehical`: An abstract class that represents a vehicle with a brand, model year, and methods to honk the horn, start the engine, and display the vehicle\\u0027s details.\\n\\n`Vehical(String brand, int modelYear)`: A constructor that initializes the brand and model year of the vehicle.\\n\\n`honk()`: A method that prints \\\&quot;Beep Beep!\\\&quot; to simulate the vehicle\\u0027s horn.\\n\\n`startEngine()`: An abstract method that must be implemented by any concrete subclass of `Vehical`.\\n\\n`showDetails()`: A method that prints the brand and model year of the vehicle.\&quot;,\&quot;/Recursion/StringReversal.java\&quot;:\&quot;This file does not contain any classes or functions. It appears to be a partial Java code snippet that is attempting to take user input for three integer variables `x`, `y`, and `z`, and then perform a comparison between `x` and `y`. However, the code is incomplete and does not have any functionality beyond the input statements.\&quot;,\&quot;/withoutrecursion/checkPalindrome.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main`: The main function that checks if the given string \\\&quot;121\\\&quot; is a palindrome and prints the result.\\n\\n`checkPalindrome`: The function that checks if the given string is a palindrome by comparing the characters at the beginning and end of the string, and returns a boolean value indicating whether the string is a palindrome or not.\\n\\nThe file checks if a given string is a palindrome by converting it to lowercase and then comparing the characters at the beginning and end of the string. If all the characters match, the string is considered a palindrome.\&quot;,\&quot;/Recursion/ArrayReverse.java\&quot;:\&quot;This file contains a single class and a single function:\\n\\n`ArrayReverse`: This class demonstrates how to reverse an array using recursion.\\n\\n`reverseArray`: This function takes an array, a start index, and an end index, and recursively reverses the elements of the array between the start and end indices.\\n\\nThe file as a whole demonstrates how to reverse an array using a recursive function.\&quot;,\&quot;/StringsLeetcode/ReverseStringUsingStringBuilder.java\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`main`: This function creates a `String` object, converts it to a `StringBuilder`, reverses the `StringBuilder`, and then converts it back to a `String` and prints the result.\\n\\nThe file demonstrates how to use the `StringBuilder` class to reverse a `String` in Java.\&quot;,\&quot;/withoutrecursion/checkPalindomeNumber.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`palindrome`: This function takes an integer `n` as input and checks if it is a palindrome number by reversing the number and comparing it with the original number.\\n\\n`main`: This function is the entry point of the program. It creates an integer `number` with the value `4554`, calls the `palindrome` function with `number` as the argument, and prints whether the number is a palindrome or not.\\n\\nThe file checks if a given number is a palindrome number without using recursion. It does this by reversing the number and comparing it with the original number.\&quot;,\&quot;/withoutrecursion/DeadlockDemo.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it demonstrates a deadlock scenario in Java using two threads that acquire and release locks on two different resources.\\n\\nThe file creates two threads, `thread1` and `thread2`, that attempt to acquire locks on two different objects, `Resource1` and `Resource2`, in a specific order. This leads to a deadlock situation where the threads are waiting for each other to release the locks they hold, and the program never completes.\\n\\nThe purpose of this file is to illustrate the concept of deadlock and how it can occur in multithreaded programming when threads acquire locks in an improper order.\&quot;,\&quot;/withoutrecursion/ReverseNumber.java\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`reverseNumber`: This function takes an integer `n` as input and returns a string representation of the reversed number.\\n\\n`main`: This function is the entry point of the program. It calls the `reverseNumber` function with the number `12345` and prints the reversed number to the console.\\n\\nThe file implements a simple algorithm to reverse a given integer number without using recursion.\&quot;,\&quot;/oops/classbasics/Student.java\&quot;:\&quot;This file contains a single class called `Student` and several functions within it.\\n\\n`Student`: A class that represents a student with properties such as student ID, name, and grade.\\n\\n`Student()`: The default constructor for the `Student` class, which initializes the instance variables with default values using constructor chaining.\\n\\n`Student(String, String, String)`: The parameterized constructor for the `Student` class, which initializes the instance variables with the provided values.\\n\\n`display()`: A method that prints the student\\u0027s details, including the student ID, name, and grade.\\n\\n`main(String[])`: The main method that creates two `Student` objects, one using the default constructor and one using the parameterized constructor, and then calls the `display()` method to print their details.\&quot;,\&quot;/StringsLeetcode/ThreeSum.java\&quot;:\&quot;This file contains a single class `ThreeSum` and a single function `findThreeSum()`.\\n\\n`ThreeSum`: This class provides a solution to the problem of finding a triplet of numbers in an array that add up to a given target value.\\n\\n`findThreeSum()`: This function takes an array of integers and a target value, and returns an array of three integers that add up to the target value, if such a triplet exists.\\n\\nThe main function in this file demonstrates the usage of the `findThreeSum()` function by providing an example input array and target value, and printing the result.\&quot;,\&quot;/oops/classbasics/Car.java\&quot;:\&quot;`Car`: A class that represents a car, which extends the `Vehical` class and implements the `Features` and `MusicSystem` interfaces.\\n\\n`startEngine()`: Prints a message indicating that the car engine has started.\\n`displayShowDetails()`: Prints the details of the car, including the brand, model year, fuel capacity, and current fuel level.\\n`refuel(int fuel)`: Refuels the car up to its maximum fuel capacity.\\n`drive(int distance)`: Drives the car for the specified distance, reducing the current fuel level accordingly.\\n`checkFuelStatus()`: Checks the current fuel level and prints a message indicating whether the fuel level is low or sufficient.\\n`changeGear(int gear)`: Changes the gear of the car to the specified gear, within the valid range of 1 to 5.\\n`numberOfSeats(int seats)`: Prints the number of seats in the car.\\n`playMusic()`: Prints a message indicating that music is being played.\\n`displayCar()`: Prints the brand and model of the car.\\n`main(String[] args)`: Creates a `Car` object, calls various methods on it, and demonstrates the functionality of the `Car` class.\&quot;,\&quot;/Recursion/basicRecursionQue/BasicRecursionQus.java\&quot;:\&quot;This file contains a single class `BasicRecursionQus` with the following functions:\\n\\n`printNum`: Prints the given number and then recursively calls itself with the number decremented by 1.\\n\\n`printName`: Prints the string \\\&quot;Raj\\\&quot; and then recursively calls itself with the number decremented by 1.\\n\\n`printNumRev`: Prints the given number and then recursively calls itself with the number decremented by 1, effectively printing the numbers in reverse order.\\n\\n`sumOfNum`: Recursively calculates the sum of the first `num` natural numbers.\\n\\n`factorialOfNum`: Recursively calculates the factorial of the given number.\\n\\nThe file demonstrates the use of basic recursive functions to perform various tasks, such as printing numbers, printing a name, reversing the order of numbers, calculating the sum of numbers, and calculating the factorial of a number.\&quot;,\&quot;/sorting/bubble/BubbleSort.java\&quot;:\&quot;This file contains a single class `BubbleSort` and two functions `bubbleSort` and `bubbleSort2`.\\n\\n`BubbleSort`: This class contains two implementations of the bubble sort algorithm.\\n\\n`bubbleSort`: This function performs the bubble sort algorithm on the given array `a`.\\n\\n`bubbleSort2`: This function performs an optimized version of the bubble sort algorithm on the given array `arr`.\\n\\nThe `main` function demonstrates the usage of the `bubbleSort2` function by sorting an example array.\&quot;,\&quot;/oops/classbasics/Person.java\&quot;:\&quot;`Person`: A class that represents a person with a name and age.\\n\\n`Person(String name, int age)`: A constructor that initializes the name and age of a person.\\n\\n`displayPersonInfo()`: A method that prints the name and age of a person.\\n\\n`greet()`: A method that prints a greeting message.\&quot;,\&quot;/oops/classbasics/Payment.java\&quot;:\&quot;This file contains a single class and one function.\\n\\n`Payment`: A class that represents a payment processing operation.\\n\\n`processPayment()`: A function that prints a message indicating that the payment is being processed.\&quot;,\&quot;/oops/Inheritance/singleInheritance/Animal.java\&quot;:\&quot;`Animal`: A class that represents an animal and provides an `eat()` method.\\n\\n`Dog`: A class that extends the `Animal` class and adds a `bark()` method, as well as an overridden `eat()` method.\\n\\n`TestInheritance`: A class that creates an instance of the `Dog` class and calls its `eat()` and `bark()` methods.\&quot;,\&quot;/hashmap/ThreeSum.java\&quot;:\&quot;This file contains a commented-out class `ThreeSum` and a commented-out function `findThreeSum()`. The purpose of the file appears to be to find a triplet of numbers in a given array that add up to a target value.\\n\\n`ThreeSum`: A class that appears to be designed to find a triplet of numbers in a given array that add up to a target value.\\n\\n`findThreeSum()`: A function that appears to be designed to find a triplet of numbers in a given array that add up to a target value.\&quot;,\&quot;/StringsLeetcode/ReverseString.java\&quot;:\&quot;This file does not contain any classes. It only contains one function:\\n\\n`main`: This function takes a string \\\&quot;DIVYANSH\\\&quot;, converts it to a character array, and then iterates through the array in reverse order to create a new string \\\&quot;HSNAYIVD\\\&quot; which is the reverse of the original string.\\n\\nThe file as a whole demonstrates how to reverse a string in Java using a character array.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;G:/Divyansh/java_practise&quot;:&quot;{\&quot;/Algorithm/BasicTwoPointerQuestions/TwoPointerQuestion.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Algorithm/BasicTwoPointerQuestions/TwoPointerQuestion.java\&quot;,\&quot;file_name\&quot;:\&quot;TwoPointerQuestion.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;pairWithGivenSum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int target, int left, int right)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;target\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;left\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;right\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;moveAllZerosToEnd\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[32,5]]},{\&quot;method_name\&quot;:\&quot;removeDuplicateSortedArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr2\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[34,4],[46,5]]},{\&quot;method_name\&quot;:\&quot;reverseArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[49,4],[62,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[64,4],[85,5]]}]},\&quot;/Algorithm/SlidingWindow.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Algorithm/SlidingWindow.java\&quot;,\&quot;file_name\&quot;:\&quot;SlidingWindow.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[7,5]]}]},\&quot;/Algorithm/TwoPointerAlgorithm.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Algorithm/TwoPointerAlgorithm.java\&quot;,\&quot;file_name\&quot;:\&quot;TwoPointerAlgorithm.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findNumbersWithSum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int targetSum)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;targetSum\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[27,5]]}]},\&quot;/basicarrayquestion/BasicArrayQuestions.java\&quot;:{\&quot;file_path\&quot;:\&quot;/basicarrayquestion/BasicArrayQuestions.java\&quot;,\&quot;file_name\&quot;:\&quot;BasicArrayQuestions.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;sortedArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[24,6]]},{\&quot;method_name\&quot;:\&quot;sumOfArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr2\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,5],[35,6]]},{\&quot;method_name\&quot;:\&quot;avgOfArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr2\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[37,5],[47,6]]},{\&quot;method_name\&quot;:\&quot;largestElementArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr2\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[49,5],[58,6]]},{\&quot;method_name\&quot;:\&quot;secondLrgestElementArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr2\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[60,4],[78,5]]},{\&quot;method_name\&quot;:\&quot;ifArraySort\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr2\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[81,4],[89,5]]},{\&quot;method_name\&quot;:\&quot;containSpecificValue\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[91,4],[100,5]]},{\&quot;method_name\&quot;:\&quot;removeSpecificElement\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[102,4],[123,5]]},{\&quot;method_name\&quot;:\&quot;removeSpecificElementUsingArrayList\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[125,2],[136,2]]},{\&quot;method_name\&quot;:\&quot;insertElementSpecificPosition\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[138,4],[154,5]]},{\&quot;method_name\&quot;:\&quot;insertElementSpecificPositionUsingArrayList\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[155,4],[166,5]]},{\&quot;method_name\&quot;:\&quot;copyOfArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] originalArray)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;originalArray\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[168,4],[187,5]]},{\&quot;method_name\&quot;:\&quot;findIndexOfArrayElement\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[188,4],[196,5]]},{\&quot;method_name\&quot;:\&quot;maxAndminValueOfArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[198,4],[212,5]]},{\&quot;method_name\&quot;:\&quot;reverseArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[214,4],[220,5]]},{\&quot;method_name\&quot;:\&quot;duplicateValueOfArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[223,4],[234,5]]},{\&quot;method_name\&quot;:\&quot;commonElementArrays\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr1, int[] arr2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr1\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr2\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[236,4],[247,5]]},{\&quot;method_name\&quot;:\&quot;duplicateValueUsingHashMap\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[249,4],[268,5]]},{\&quot;method_name\&quot;:\&quot;leftRotateArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[270,4],[281,5]]},{\&quot;method_name\&quot;:\&quot;removeDuplicateElementOfArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[283,4],[295,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[297,4],[358,9]]}]},\&quot;/collectionFramework/arrayListExample/ArrayListExample.java\&quot;:{\&quot;file_path\&quot;:\&quot;/collectionFramework/arrayListExample/ArrayListExample.java\&quot;,\&quot;file_name\&quot;:\&quot;ArrayListExample.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[38,5]]}]},\&quot;/collectionFramework/arrayListExample/ArrayListExampleObject.java\&quot;:{\&quot;file_path\&quot;:\&quot;/collectionFramework/arrayListExample/ArrayListExampleObject.java\&quot;,\&quot;file_name\&quot;:\&quot;ArrayListExampleObject.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;Person\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name, int age)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;age\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[36,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;getName\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[41,4],[43,5]]},{\&quot;method_name\&quot;:\&quot;getAge\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[45,4],[47,5]]},{\&quot;method_name\&quot;:\&quot;toString\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[49,4],[52,5]]}]},\&quot;/hashmap/AnagramChecker.java\&quot;:{\&quot;file_path\&quot;:\&quot;/hashmap/AnagramChecker.java\&quot;,\&quot;file_name\&quot;:\&quot;AnagramChecker.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;areAnagrams\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str1, String str2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str1\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str2\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[28,4],[37,5]]}]},\&quot;/hashmap/BasicHashMapQus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/hashmap/BasicHashMapQus.java\&quot;,\&quot;file_name\&quot;:\&quot;BasicHashMapQus.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findFirstNonRepeating\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[7,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;lastNonRepeating\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[35,4],[60,4]]},{\&quot;method_name\&quot;:\&quot;countFreq\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[61,4],[91,5]]},{\&quot;method_name\&quot;:\&quot;isSubset\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] a, int[] b)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;b\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[93,4],[108,5]]},{\&quot;method_name\&quot;:\&quot;duplicateValueUsingHashMap\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[110,4],[129,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[130,4],[148,5]]}]},\&quot;/hashmap/FirstNonRepeatedCharFinder.java\&quot;:{\&quot;file_path\&quot;:\&quot;/hashmap/FirstNonRepeatedCharFinder.java\&quot;,\&quot;file_name\&quot;:\&quot;FirstNonRepeatedCharFinder.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;firstNonRepeatedChar\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;char\&quot;,\&quot;scope\&quot;:[[8,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[28,4],[36,5]]}]},\&quot;/hashmap/IsIsoMorphic.java\&quot;:{\&quot;file_path\&quot;:\&quot;/hashmap/IsIsoMorphic.java\&quot;,\&quot;file_name\&quot;:\&quot;IsIsoMorphic.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;isIsomorphic\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s, String t)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;t\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[6,4],[38,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[41,4],[45,5]]}]},\&quot;/hashmap/LongestSubstringWithoutRepeatingCharacters.java\&quot;:{\&quot;file_path\&quot;:\&quot;/hashmap/LongestSubstringWithoutRepeatingCharacters.java\&quot;,\&quot;file_name\&quot;:\&quot;LongestSubstringWithoutRepeatingCharacters.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;longestSubstringWithoutRepeatingCharacters\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[22,4],[25,5]]}]},\&quot;/hashmap/ThreeSum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/hashmap/ThreeSum.java\&quot;,\&quot;file_name\&quot;:\&quot;ThreeSum.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/hashmap/TwoSum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/hashmap/TwoSum.java\&quot;,\&quot;file_name\&quot;:\&quot;TwoSum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findTwoSum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] nums, int target)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;nums\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;target\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[22,4],[32,5]]}]},\&quot;/oops/classbasics/Animal.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Animal.java\&quot;,\&quot;file_name\&quot;:\&quot;Animal.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;makeSound\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,21]]}]},\&quot;/oops/classbasics/BankAccount.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/BankAccount.java\&quot;,\&quot;file_name\&quot;:\&quot;BankAccount.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;BankAccount\&quot;,\&quot;method_parameters\&quot;:\&quot;(String accountHolder, double balance)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;accountHolder\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;balance\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;getBalance\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[12,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;deposit\&quot;,\&quot;method_parameters\&quot;:\&quot;(double amount)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;withdraw\&quot;,\&quot;method_parameters\&quot;:\&quot;(double amount)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;amount\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[25,4],[32,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[34,4],[42,5]]}]},\&quot;/oops/classbasics/Bike.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Bike.java\&quot;,\&quot;file_name\&quot;:\&quot;Bike.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Bike\&quot;,\&quot;method_parameters\&quot;:\&quot;(String brand, int modelYear)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;brand\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;modelYear\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;startEngine\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[12,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[17,4],[20,5]]}]},\&quot;/oops/classbasics/Car.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Car.java\&quot;,\&quot;file_name\&quot;:\&quot;Car.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Car\&quot;,\&quot;method_parameters\&quot;:\&quot;(String brand ,int modelYear,int fuelCapacity,int currentFuelLevel,String model)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;brand\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;modelYear\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;fuelCapacity\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;currentFuelLevel\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;model\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;startEngine\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;displayShowDetails\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[22,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;refuel\&quot;,\&quot;method_parameters\&quot;:\&quot;(int fuel)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;fuel\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[30,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;drive\&quot;,\&quot;method_parameters\&quot;:\&quot;(int distance)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;distance\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[41,4],[56,5]]},{\&quot;method_name\&quot;:\&quot;checkFuelStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[58,4],[64,5]]},{\&quot;method_name\&quot;:\&quot;changeGear\&quot;,\&quot;method_parameters\&quot;:\&quot;(int gear)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;gear\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[66,7],[73,5]]},{\&quot;method_name\&quot;:\&quot;numberOfSeats\&quot;,\&quot;method_parameters\&quot;:\&quot;(int seats)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;seats\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[75,4],[78,5]]},{\&quot;method_name\&quot;:\&quot;playMusic\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[80,4],[83,5]]},{\&quot;method_name\&quot;:\&quot;displayCar\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[84,4],[87,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[88,4],[102,5]]}]},\&quot;/oops/classbasics/Cat.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Cat.java\&quot;,\&quot;file_name\&quot;:\&quot;Cat.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;makeSound\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[18,5]]}]},\&quot;/oops/classbasics/Circle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Circle.java\&quot;,\&quot;file_name\&quot;:\&quot;Circle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Circle\&quot;,\&quot;method_parameters\&quot;:\&quot;(double length, double width,  double radius)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;length\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;width\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;radius\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[9,5]]},{\&quot;method_name\&quot;:\&quot;area\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[10,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[15,4],[18,5]]}]},\&quot;/oops/classbasics/CreditCard.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/CreditCard.java\&quot;,\&quot;file_name\&quot;:\&quot;CreditCard.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;processPayment\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[7,5]]}]},\&quot;/oops/classbasics/Dog.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Dog.java\&quot;,\&quot;file_name\&quot;:\&quot;Dog.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;makeSound\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[6,5]]}]},\&quot;/oops/classbasics/Employee.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Employee.java\&quot;,\&quot;file_name\&quot;:\&quot;Employee.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Employee\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name,int age, double salary)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;age\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;salary\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[9,5]]},{\&quot;method_name\&quot;:\&quot;displayEmployeeInfo\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;greet\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[25,5]]}]},\&quot;/oops/classbasics/Engine.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Engine.java\&quot;,\&quot;file_name\&quot;:\&quot;Engine.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;startEngine\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[4,23]]}]},\&quot;/oops/classbasics/Features.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Features.java\&quot;,\&quot;file_name\&quot;:\&quot;Features.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;changeGear\&quot;,\&quot;method_parameters\&quot;:\&quot;(int gear)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;gear\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,30]]},{\&quot;method_name\&quot;:\&quot;numberOfSeats\&quot;,\&quot;method_parameters\&quot;:\&quot;(int seat)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;seat\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[5,33]]}]},\&quot;/oops/classbasics/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[8,5]]}]},\&quot;/oops/classbasics/MathOperations.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/MathOperations.java\&quot;,\&quot;file_name\&quot;:\&quot;MathOperations.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;add\&quot;,\&quot;method_parameters\&quot;:\&quot;(int a, int b)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;b\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[4,4],[6,5]]},{\&quot;method_name\&quot;:\&quot;add\&quot;,\&quot;method_parameters\&quot;:\&quot;(int a, int b, int c)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;b\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[8,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;add\&quot;,\&quot;method_parameters\&quot;:\&quot;(double a, double b)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;a\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;b\&quot;}],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[13,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[17,4],[22,5]]}]},\&quot;/oops/classbasics/MusicSystem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/MusicSystem.java\&quot;,\&quot;file_name\&quot;:\&quot;MusicSystem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;playMusic\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,21]]}]},\&quot;/oops/classbasics/Payment.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Payment.java\&quot;,\&quot;file_name\&quot;:\&quot;Payment.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;processPayment\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[6,5]]}]},\&quot;/oops/classbasics/PayPal.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/PayPal.java\&quot;,\&quot;file_name\&quot;:\&quot;PayPal.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;processPayment\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[7,5]]}]},\&quot;/oops/classbasics/Person.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Person.java\&quot;,\&quot;file_name\&quot;:\&quot;Person.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Person\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name, int age)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;age\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,2],[9,3]]},{\&quot;method_name\&quot;:\&quot;displayPersonInfo\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,2],[14,3]]},{\&quot;method_name\&quot;:\&quot;greet\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,2],[18,3]]}]},\&quot;/oops/classbasics/Rectangle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Rectangle.java\&quot;,\&quot;file_name\&quot;:\&quot;Rectangle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Rectangle\&quot;,\&quot;method_parameters\&quot;:\&quot;(double length, double width)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;length\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;width\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;area\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[21,5]]}]},\&quot;/oops/classbasics/Shape.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Shape.java\&quot;,\&quot;file_name\&quot;:\&quot;Shape.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Shape\&quot;,\&quot;method_parameters\&quot;:\&quot;(double length,double width)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;length\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;width\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;area\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[12,4],[12,17]]}]},\&quot;/oops/classbasics/Student.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Student.java\&quot;,\&quot;file_name\&quot;:\&quot;Student.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Student\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;Student\&quot;,\&quot;method_parameters\&quot;:\&quot;(String studentId, String studentName, String grade)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;studentId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;studentName\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;grade\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;display\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[30,4],[39,5]]}]},\&quot;/oops/classbasics/Vehical.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Vehical.java\&quot;,\&quot;file_name\&quot;:\&quot;Vehical.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Vehical\&quot;,\&quot;method_parameters\&quot;:\&quot;(String brand, int modelYear)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;brand\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;modelYear\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;honk\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;startEngine\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[17,4],[17,32]]},{\&quot;method_name\&quot;:\&quot;showDetails\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[21,5]]}]},\&quot;/oops/classbasics/Vehicle.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/classbasics/Vehicle.java\&quot;,\&quot;file_name\&quot;:\&quot;Vehicle.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;start\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,17]]},{\&quot;method_name\&quot;:\&quot;stop\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[4,16]]}]},\&quot;/oops/Inheritance/singleInheritance/Animal.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/Inheritance/singleInheritance/Animal.java\&quot;,\&quot;file_name\&quot;:\&quot;Animal.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;eat\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[6,5]]},{\&quot;method_name\&quot;:\&quot;bark\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;eat\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[25,5]]}]},\&quot;/oops/Person.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/Person.java\&quot;,\&quot;file_name\&quot;:\&quot;Person.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Person\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name, int age)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;age\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[9,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[15,5]]}]},\&quot;/oops/Student.java\&quot;:{\&quot;file_path\&quot;:\&quot;/oops/Student.java\&quot;,\&quot;file_name\&quot;:\&quot;Student.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Student\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name, int age, int rollno)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;age\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;rollno\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;displayCountry\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;Student\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[30,4],[34,5]]},{\&quot;method_name\&quot;:\&quot;show\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[36,4],[38,5]]},{\&quot;method_name\&quot;:\&quot;show\&quot;,\&quot;method_parameters\&quot;:\&quot;(int times)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;times\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[40,4],[45,5]]},{\&quot;method_name\&quot;:\&quot;display\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[47,4],[50,5]]},{\&quot;method_name\&quot;:\&quot;showInfo\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[52,4],[56,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[58,4],[84,5]]}]},\&quot;/pattern/StarPattern.java\&quot;:{\&quot;file_path\&quot;:\&quot;/pattern/StarPattern.java\&quot;,\&quot;file_name\&quot;:\&quot;StarPattern.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;print1\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;print2\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[17,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;print3\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[29,4],[38,5]]},{\&quot;method_name\&quot;:\&quot;print4\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[40,4],[53,5]]},{\&quot;method_name\&quot;:\&quot;print5\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[55,4],[66,5]]},{\&quot;method_name\&quot;:\&quot;print6\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[68,4],[96,5]]},{\&quot;method_name\&quot;:\&quot;print7\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[98,4],[113,5]]},{\&quot;method_name\&quot;:\&quot;print8\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[115,4],[134,5]]},{\&quot;method_name\&quot;:\&quot;print9\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[136,4],[157,5]]},{\&quot;method_name\&quot;:\&quot;print10\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[159,4],[171,5]]},{\&quot;method_name\&quot;:\&quot;print11\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[174,4],[183,5]]},{\&quot;method_name\&quot;:\&quot;print12\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[185,4],[194,5]]},{\&quot;method_name\&quot;:\&quot;print13\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[196,4],[206,5]]},{\&quot;method_name\&quot;:\&quot;print14\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[209,4],[231,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[234,4],[276,5]]}]},\&quot;/Recursion/basicRecursionQue/BasicRecursionQus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/basicRecursionQue/BasicRecursionQus.java\&quot;,\&quot;file_name\&quot;:\&quot;BasicRecursionQus.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;printNum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,0],[10,1]]},{\&quot;method_name\&quot;:\&quot;printName\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;printNumRev\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[23,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;sumOfNum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[30,4],[37,5]]},{\&quot;method_name\&quot;:\&quot;factorialOfNum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[40,4],[44,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[53,4],[73,5]]}]},\&quot;/Recursion/ArmstrongNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/ArmstrongNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;ArmstrongNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;isArmstrong\&quot;,\&quot;method_parameters\&quot;:\&quot;(int number)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;number\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[2,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[15,4],[22,5]]}]},\&quot;/Recursion/ArrayReverse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/ArrayReverse.java\&quot;,\&quot;file_name\&quot;:\&quot;ArrayReverse.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;reverseArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int start, int end)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;start\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;end\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[15,4],[30,5]]}]},\&quot;/Recursion/ArraySum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/ArraySum.java\&quot;,\&quot;file_name\&quot;:\&quot;ArraySum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findSum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[3,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[18,5]]}]},\&quot;/Recursion/FibonacciNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/FibonacciNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;FibonacciNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;fib\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[9,4],[15,5]]}]},\&quot;/Recursion/MaxMinElement.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/MaxMinElement.java\&quot;,\&quot;file_name\&quot;:\&quot;MaxMinElement.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getMax\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[3,4],[8,5]]},{\&quot;method_name\&quot;:\&quot;getMin\&quot;,\&quot;method_parameters\&quot;:\&quot;(int arr[], int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[10,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[17,4],[22,5]]}]},\&quot;/Recursion/MinMaxElementRecursive.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/MinMaxElementRecursive.java\&quot;,\&quot;file_name\&quot;:\&quot;MinMaxElementRecursive.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;findMin\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] array, int start, int end)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;array\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;start\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;end\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[13,2],[24,3]]},{\&quot;method_name\&quot;:\&quot;findMax\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] array,int start,int end)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;array\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;start\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;end\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[26,2],[37,3]]}]},\&quot;/Recursion/PalindromeCheck.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/PalindromeCheck.java\&quot;,\&quot;file_name\&quot;:\&quot;PalindromeCheck.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;isPalindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str, int start, int end)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;start\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;end\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[4,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[27,5]]}]},\&quot;/Recursion/ReverseWords.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/ReverseWords.java\&quot;,\&quot;file_name\&quot;:\&quot;ReverseWords.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[8,5]]},{\&quot;method_name\&quot;:\&quot;reverse\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[10,4],[17,5]]}]},\&quot;/Recursion/RotateArray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/RotateArray.java\&quot;,\&quot;file_name\&quot;:\&quot;RotateArray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;rotateArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int d)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;d\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[15,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;rotateHelper\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[24,4],[30,5]]}]},\&quot;/Recursion/StringReversal.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Recursion/StringReversal.java\&quot;,\&quot;file_name\&quot;:\&quot;StringReversal.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/sorting/bubble/BubbleSort.java\&quot;:{\&quot;file_path\&quot;:\&quot;/sorting/bubble/BubbleSort.java\&quot;,\&quot;file_name\&quot;:\&quot;BubbleSort.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;bubbleSort\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] a)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;a\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,1],[24,2]]},{\&quot;method_name\&quot;:\&quot;bubbleSort2\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[25,4],[40,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[42,4],[51,5]]}]},\&quot;/sorting/insertion/InsertionSort.java\&quot;:{\&quot;file_path\&quot;:\&quot;/sorting/insertion/InsertionSort.java\&quot;,\&quot;file_name\&quot;:\&quot;InsertionSort.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;insertionSort\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[25,5]]}]},\&quot;/sorting/merge/MergeSort.java\&quot;:{\&quot;file_path\&quot;:\&quot;/sorting/merge/MergeSort.java\&quot;,\&quot;file_name\&quot;:\&quot;MergeSort.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;mergeSort\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int low, int high)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;low\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;high\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[20,6]]},{\&quot;method_name\&quot;:\&quot;merge\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int low, int mid, int high)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;low\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;mid\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;high\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[53,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[55,4],[63,5]]}]},\&quot;/sorting/selection/SelectionSort.java\&quot;:{\&quot;file_path\&quot;:\&quot;/sorting/selection/SelectionSort.java\&quot;,\&quot;file_name\&quot;:\&quot;SelectionSort.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;selectionSort\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;printArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[22,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[28,4],[43,5]]}]},\&quot;/sorting/MergeSort.java\&quot;:{\&quot;file_path\&quot;:\&quot;/sorting/MergeSort.java\&quot;,\&quot;file_name\&quot;:\&quot;MergeSort.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;mergeSort\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr,int low,int high)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;low\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;high\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;merge\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int low, int mid, int high)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;low\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;mid\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;high\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[62,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[64,4],[71,5]]}]},\&quot;/StringsLeetcode/ArrayStringEqualityChecker.java\&quot;:{\&quot;file_path\&quot;:\&quot;/StringsLeetcode/ArrayStringEqualityChecker.java\&quot;,\&quot;file_name\&quot;:\&quot;ArrayStringEqualityChecker.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;areEqual\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] word1, String[] word2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;word1\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;word2\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[4,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[26,5]]}]},\&quot;/StringsLeetcode/RemovePalindromeSub.java\&quot;:{\&quot;file_path\&quot;:\&quot;/StringsLeetcode/RemovePalindromeSub.java\&quot;,\&quot;file_name\&quot;:\&quot;RemovePalindromeSub.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;removePalindromeSub\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[2,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;isPalindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[17,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[27,4],[31,5]]}]},\&quot;/StringsLeetcode/ReverseString.java\&quot;:{\&quot;file_path\&quot;:\&quot;/StringsLeetcode/ReverseString.java\&quot;,\&quot;file_name\&quot;:\&quot;ReverseString.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[13,5]]}]},\&quot;/StringsLeetcode/ReverseStringUsingStringBuilder.java\&quot;:{\&quot;file_path\&quot;:\&quot;/StringsLeetcode/ReverseStringUsingStringBuilder.java\&quot;,\&quot;file_name\&quot;:\&quot;ReverseStringUsingStringBuilder.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[8,5]]}]},\&quot;/StringsLeetcode/ThreeSum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/StringsLeetcode/ThreeSum.java\&quot;,\&quot;file_name\&quot;:\&quot;ThreeSum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findThreeSum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int target)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;target\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[24,4],[34,5]]}]},\&quot;/withoutrecursion/checkPalindomeNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/checkPalindomeNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;checkPalindomeNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;palindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[4,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[23,4],[32,5]]}]},\&quot;/withoutrecursion/checkPalindrome.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/checkPalindrome.java\&quot;,\&quot;file_name\&quot;:\&quot;checkPalindrome.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;checkPalindrome\&quot;,\&quot;method_parameters\&quot;:\&quot;(String str)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;str\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[16,4],[34,1]]}]},\&quot;/withoutrecursion/CheckVowel.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/CheckVowel.java\&quot;,\&quot;file_name\&quot;:\&quot;CheckVowel.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[25,5]]}]},\&quot;/withoutrecursion/DeadlockDemo.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/DeadlockDemo.java\&quot;,\&quot;file_name\&quot;:\&quot;DeadlockDemo.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[46,5]]}]},\&quot;/withoutrecursion/findHighest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/findHighest.java\&quot;,\&quot;file_name\&quot;:\&quot;findHighest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findHighest\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[4,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[19,5]]}]},\&quot;/withoutrecursion/findSecondHighest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/findSecondHighest.java\&quot;,\&quot;file_name\&quot;:\&quot;findSecondHighest.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;secondHighest\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[4,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[24,4],[27,5]]}]},\&quot;/withoutrecursion/ReverseNumber.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/ReverseNumber.java\&quot;,\&quot;file_name\&quot;:\&quot;ReverseNumber.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;reverseNumber\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[4,4],[12,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[18,5]]}]},\&quot;/withoutrecursion/RotateArray.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/RotateArray.java\&quot;,\&quot;file_name\&quot;:\&quot;RotateArray.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;rotateArray\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] arr, int d)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;d\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[32,5]]}]},\&quot;/withoutrecursion/ValidParentheses.java\&quot;:{\&quot;file_path\&quot;:\&quot;/withoutrecursion/ValidParentheses.java\&quot;,\&quot;file_name\&quot;:\&quot;ValidParentheses.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[14,8]]},{\&quot;method_name\&quot;:\&quot;isValid\&quot;,\&quot;method_parameters\&quot;:\&quot;(String s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[17,4],[35,5]]}]},\&quot;/REPORT.java\&quot;:{\&quot;file_path\&quot;:\&quot;/REPORT.java\&quot;,\&quot;file_name\&quot;:\&quot;REPORT.java\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>